
package w5;

import java.util.Random;

public class MultiThreads {
    static public int i;
    public static Object lockObject = new Object();
    public static boolean isPrime(int x)
    {
    	for(int i=2; i <= Math.sqrt(x); i++)
    	{
    		if(x % i == 0)
    			return false;
    	}
    	return true;
    }
    synchronized void checkPrimeNumber(int i) {
        while (true) {	
       		 if(MultiThreads.isPrime(i)==true)
       		 {
       			 System.out.println(" Thread B said Prime");
       		 }
       		 else 
       		 {
       			 System.out.println("Thread B said Not Prime");
       		 }
           try {
           	wait();
           } catch (InterruptedException ex) {
               System.out.println(ex.getMessage());
           }
       }
    }
    synchronized void createNumber() {
        while (true) {
            Random gen = new Random();
                i = gen.nextInt(100) + 1;
                System.out.println("Thread A: " + i);
            	notify();
            try {
            	wait();
            } catch (InterruptedException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }
    
    static class ThreadA extends Thread {

        @Override
        public void run() {
      
        }
    }

    static class ThreadB extends Thread {

        @Override
        public void run() {
    
        }
    }

    public static void main(String[] args) {
        // TODO code application logic here
        new ThreadA().start();
        new ThreadB().start();
    }
}