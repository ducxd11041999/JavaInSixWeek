
package w5;

import java.util.Random;

public class MultiThreads {
    static public int i;
    public static Object lockObject = new Object();
    public static boolean isPrime(int x)
    {
    	for(int i=2; i <= Math.sqrt(x); i++)
    	{
    		if(x % i == 0)
    			return false;
    	}
    	return true;
    }
    class ThreadA extends Thread {
        @Override
        public void run() {
            while (true) {
                Random gen = new Random();
                synchronized (lockObject) {
                    i = gen.nextInt(100) + 1;
                    System.out.println("Thread A: " + i);
                	notify();
                }
                try {
                
                	Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    System.err.println(ex.getMessage());
                }
            }
        }
    }

    class ThreadB extends Thread {

        @Override
        public void run() {
            while (true) {
            	 synchronized (this) {	
            		 if(MultiThreads.isPrime(i)==true)
            		 {
            			 System.out.println(" Thread B said Prime");
            		 }
            		 else 
            		 {
            			 System.out.println("Thread B said Not Prime");
            		 }
            	 }
                try {
                	wait();
                } catch (InterruptedException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }

    public static void main(String[] args) {
        // TODO code application logic here
        ThreadA A=  new ThreadA();
        ThreadB B=  new ThreadA();
    }
}